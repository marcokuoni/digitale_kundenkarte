version: '3.4'

services:
  reverse-proxy:
    depends_on: 
      - client
      - server
    image: traefik:latest

    command:
      - --api.insecure=true
      - --entrypoints.server.address=:$SERVER_ENTRY_PORT
      - --entrypoints.client_secure.address=:$CLIENT_ENTRY_PORT
      - --entrypoints.client_secure.http3.advertisedPort=$CLIENT_ENTRY_PORT
      - --experimental.http3=true
      - --providers.docker=true
      # Logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
      - --log.level=debug
    ports:
      - "$SERVER_ENTRY_PORT:$SERVER_ENTRY_PORT/tcp"
      - "$SERVER_ENTRY_PORT:$SERVER_ENTRY_PORT/udp"
      - "$CLIENT_ENTRY_PORT:$CLIENT_ENTRY_PORT/tcp"
      - "$CLIENT_ENTRY_PORT:$CLIENT_ENTRY_PORT/udp"
      - $TRAEFIK_DASHBOARD_PORT:$TRAEFIK_DASHBOARD_PORT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
      - ./traefik:/etc/traefik

  client:
    depends_on: 
      - server
    build: 
      context: client
      args:
        - CLIENT_PORT=$CLIENT_PORT
        - SERVER_URL=$DOMAIN:$SERVER_ENTRY_PORT
    restart: always
    volumes:
      - ./client:/usr/src/app
    labels:
      - traefik.enable=true
      - traefik.http.routers.client_route.entrypoints=client_secure
      - traefik.http.routers.client_route.tls=true
      - traefik.http.routers.client_route.rule=Host(`$DOMAIN`)
      - traefik.http.routers.client_route.service=client_service
      - traefik.http.services.client_service.loadbalancer.server.port=$CLIENT_PORT
      - traefik.http.services.client_service.loadbalancer.healthcheck.path=/
      - traefik.http.services.client_service.loadbalancer.healthcheck.interval=2000ms
      - traefik.http.services.client_service.loadbalancer.healthcheck.timeout=500ms
      - traefik.http.services.client_service.loadbalancer.healthcheck.scheme=http

  server:
    depends_on: 
      - mongodb
    build: 
      context: server
      args:
        - SERVER_PORT=$SERVER_PORT
    environment:
      - NODE_ENV=production
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    restart: always
    volumes:
      - ./server:/usr/src/app
    labels:
      - traefik.enable=true
      - traefik.http.routers.server_route.entrypoints=server
      - traefik.http.routers.server_route.rule=Host(`$DOMAIN`)
      - traefik.http.routers.server_route.service=server_service
      - traefik.http.services.server_service.loadbalancer.server.port=$SERVER_PORT
      - traefik.http.services.server_service.loadbalancer.healthcheck.path=/graphql?query=%7B__typename%7D
      - traefik.http.services.server_service.loadbalancer.healthcheck.headers.apollo-require-preflight=true
      - traefik.http.services.server_service.loadbalancer.healthcheck.interval=1000ms
      - traefik.http.services.server_service.loadbalancer.healthcheck.timeout=750ms
      - traefik.http.services.server_service.loadbalancer.healthcheck.scheme=http

  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    ports:
      - $MONGO_PORT:$MONGO_PORT
    volumes:  
      - dbdata:/data/db 

volumes:
  dbdata:
