version: '3.4'

services:
  reverse-proxy:
    depends_on: 
      - client
      - server
    image: traefik:latest

    command:
      - --api.insecure=true
      - --experimental.http3=true
      - --providers.docker=true
      - --providers.file.directory=/etc/traefik/dynamic
      - --entrypoints.client.address=:$CLIENT_ENTRY_PORT
      - --entrypoints.client_live_reload.address=:$CLIENT_LIVE_RELOAD_PORT
      - --entrypoints.client_secure.address=:$CLIENT_SECURE_ENTRY_PORT
      - --entrypoints.client_secure.http3.advertisedPort=$CLIENT_SECURE_ENTRY_PORT
      - --entrypoints.client.http.redirections.entryPoint.to=client_secure
      - --entrypoints.client.http.redirections.entryPoint.scheme=https
      # Logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
      - --log.level=debug
    ports:
      - $CLIENT_LIVE_RELOAD_PORT:$CLIENT_LIVE_RELOAD_PORT
      - "$CLIENT_SECURE_ENTRY_PORT:$CLIENT_SECURE_ENTRY_PORT/tcp"
      - "$CLIENT_SECURE_ENTRY_PORT:$CLIENT_SECURE_ENTRY_PORT/udp"
      - $TRAEFIK_DASHBOARD_PORT:$TRAEFIK_DASHBOARD_PORT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
      - ./traefik/certs-traefik.yaml:/etc/traefik/dynamic/certs-traefik.yaml
      - ./traefik/certs/:/etc/certs/

  client:
    depends_on: 
      - server
    build: 
      context: client
      args:
        - CLIENT_PORT=$CLIENT_PORT
    environment:
      - SERVER_URL=$CLIENT_URL
      - SCHEMA_VERSION_KEY=$SCHEMA_VERSION_KEY
      - SCHEMA_VERSION=$SCHEMA_VERSION
      - JWT_COOKIE_NAME=$JWT_COOKIE_NAME
      - DEFAULT_URL_TOKEN_BLOCK_FOR_MINUTES=$DEFAULT_URL_TOKEN_BLOCK_FOR_MINUTES
      - DEFAULT_URL_TOKEN_VALID_FOR_MINUTES=$DEFAULT_URL_TOKEN_VALID_FOR_MINUTES
      - STAMPS_LENGTH=$STAMPS_LENGTH
      - CLIENT_PING_INTERVAL=$CLIENT_PING_INTERVAL
      - SERVER_REQUEST_COUNT_CHECK_INTERVAL=$SERVER_REQUEST_COUNT_CHECK_INTERVAL
      - CHECK_FOR_HOW_MANY_CYCLES=$CHECK_FOR_HOW_MANY_CYCLES
    restart: always
    volumes:
      - ./client:/usr/src/app
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.customHeader.headers.customresponseheaders.x-content-type-options=
      - traefik.http.routers.client_live_reload_route.entrypoints=client_live_reload
      - traefik.http.routers.client_live_reload_route.middlewares=customHeader
      - traefik.http.routers.client_live_reload_route.tls=true
      - traefik.http.routers.client_live_reload_route.rule=Host(`$DOMAIN`)
      - traefik.http.routers.client_live_reload_route.service=client_live_reload_service
      - traefik.http.routers.client_route.entrypoints=client_secure
      - traefik.http.routers.client_route.tls=true
      - traefik.http.routers.client_route.rule=Host(`$DOMAIN`)
      - traefik.http.routers.client_route.service=client_service
      - traefik.http.services.client_live_reload_service.loadbalancer.server.port=$CLIENT_LIVE_RELOAD_PORT
      - traefik.http.services.client_service.loadbalancer.server.port=$CLIENT_PORT
      - traefik.http.services.client_service.loadbalancer.healthcheck.path=/
      - traefik.http.services.client_service.loadbalancer.healthcheck.interval=2000ms
      - traefik.http.services.client_service.loadbalancer.healthcheck.timeout=500ms
      - traefik.http.services.client_service.loadbalancer.healthcheck.scheme=http

  server:
    depends_on: 
      - mongodb
    build: 
      context: server
      args:
        - SERVER_PORT=$SERVER_PORT
    environment:
      - NODE_ENV=$NODE_ENV
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
      # Apollo
      - APOLLO_KEY=$APOLLO_KEY
      - APOLLO_GRAPH_REF=$APOLLO_GRAPH_REF
      - APOLLO_SCHEMA_REPORTING=$APOLLO_SCHEMA_REPORTING
      - JWT_KEY=$JWT_KEY
      - JWT_EXPIRES_IN=$JWT_EXPIRES_IN
      - JWT_REFRESH_KEY=$JWT_REFRESH_KEY
      - JWT_REFRESH_EXPIRES_IN=$JWT_REFRESH_EXPIRES_IN
      - JWT_REFRESH_COOKIE_NAME=$JWT_REFRESH_COOKIE_NAME
      - CLIENT_URL=$CLIENT_URL
      - SERVER_URL=$CLIENT_URL
      - PASSWORD_SALT_ROUNDS=$PASSWORD_SALT_ROUNDS
      - JWT_URL_TOKEN_KEY=$JWT_URL_TOKEN_KEY
      - STAMPS_LENGTH=$STAMPS_LENGTH
      - FROM_EMAIL_ADDRESS=$FROM_EMAIL_ADDRESS
      - EMAIL_RESET_SECRET=$EMAIL_RESET_SECRET
      - EMAIL_RESET_EXPIRES_IN=$EMAIL_RESET_EXPIRES_IN
      - EMAIL_SERVER_HOST=$EMAIL_SERVER_HOST
      - EMAIL_USERNAME=$EMAIL_USERNAME
      - EMAIL_PASSWORD=$EMAIL_PASSWORD
    restart: always
    volumes:
      - ./server:/usr/src/app
    labels:
      - traefik.enable=true
      - traefik.http.routers.server_route.entrypoints=client_secure
      - traefik.http.routers.server_route.tls=true
      - traefik.http.routers.server_route.rule=(Host(`$DOMAIN`) && Path(`/graphql`))
      - traefik.http.routers.server_route.service=server_service
      - traefik.http.services.server_service.loadbalancer.server.port=$SERVER_PORT
      - traefik.http.services.server_service.loadbalancer.healthcheck.path=/graphql?query=%7B__typename%7D
      - traefik.http.services.server_service.loadbalancer.healthcheck.headers.apollo-require-preflight=true
      - traefik.http.services.server_service.loadbalancer.healthcheck.interval=1000ms
      - traefik.http.services.server_service.loadbalancer.healthcheck.timeout=750ms
      - traefik.http.services.server_service.loadbalancer.healthcheck.scheme=http

  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    ports:
      - $MONGO_PORT:$MONGO_PORT
    volumes:  
      - dbdata:/data/db 

volumes:
  dbdata:
