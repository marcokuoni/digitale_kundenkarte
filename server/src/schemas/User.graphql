scalar Date

type Stamp {
  creationDate: Date!
}

type Card {
  creationDate: Date!
  stamps: [Stamp]!
}

type User {
  _id: ID!
  transfercode: String!
  name: String
  email: String
  newsletter: Boolean
  cards: [Card]!
  createdAt: Date!
  updatedAt: Date!
}

type RefreshToken {
  _id: ID!
  user: User!
  expires: Date!
  created: Date!
  createdByIp: String!
  createdByUserAgent: String!
  createdAt: Date!
  updatedAt: Date!
}


type Query {
  getUsers: [User!]!
  getCurrentUser: User!
  getActiveRefreshTokens: [RefreshToken!]!
}

type Mutation {
  updateUser(
    _id: ID!
    name: String
    email: String
    newsletter: Boolean!
    password: String
  ): User!
  signIn(transfercode: String!, password: String): Boolean!
  signUp(
    name: String
    email: String
    newsletter: Boolean!
    password: String
  ): Boolean!
  refresh: Boolean!
  signOut: Boolean!
  revokeRefreshToken(_id: ID!): Boolean!
}
